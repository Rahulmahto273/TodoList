{"version":3,"sources":["components/todo.js","actions/index.js","components/app.js","reducer/reducers.js","reducer/index.js","store.js","index.js"],"names":["Todo","useState","inputData","setData","list","useSelector","state","reducers","dispatch","useDispatch","className","type","placeholder","value","onChange","event","target","onClick","payload","id","Math","random","data","addTodo","map","elem","class","App","initialData","action","newlist","filter","rootReducers","combineReducers","store","createStore","ReactDom","render","document","getElementById"],"mappings":"0LAuCeA,MAlCf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAMC,aAAY,SAACC,GAAD,OAASA,EAAMC,SAASH,QAC1CI,EAAWC,cACjB,OACE,mCACE,qBAAKC,UAAU,YAAf,SACA,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,QAAf,UACE,4CACA,uBAAOA,UAAU,QAAQC,KAAM,OAAOC,YAAY,YAAYC,MAAQX,EAAYY,SAAU,SAACC,GAAD,OAASZ,EAAQY,EAAMC,OAAOH,UAC1H,iCAAQ,mBAAGH,UAAU,aAAaO,QAAS,kBAAIT,EChBlC,SAACN,GACtB,MAAM,CACJS,KAAM,MACNO,QAAQ,CACNC,GAAIC,KAAKC,SACTC,KAAMpB,IDWsDqB,CAAQrB,GAAWC,EAAQ,aAErF,qBAAKO,UAAU,OAAf,SAEIN,EAAKoB,KAAI,SAACC,GACR,OACA,sBAAKf,UAAU,WAAf,UACE,6BAAKe,EAAKH,OACV,mBAAGI,MAAM,mBAAmBT,QAAS,kBAAIT,ECbjD,CACJG,KAAM,SACNQ,GDWyEM,EAAKN,QAClE,yBAH6BM,EAAKN,SAQ5C,qBAAKT,UAAU,SAAf,SACE,6BAAI,wBAAQC,KAAK,SAASM,QAAS,kBAAIT,ECbvC,CACJG,KAAM,YDYE,oCEpBGgB,MARf,WACE,OACE,mCACE,cAAC,EAAD,O,sBCLAC,EAAa,CACjBxB,KAAM,IA0COG,EAxCE,WAA8B,IAA7BD,EAA4B,uDAAtBsB,EAAaC,EAAS,uCAC5C,OAAQA,EAAOlB,MACb,IAAK,MACL,MAAmBkB,EAAOX,QAAnBC,EAAP,EAAOA,GAAIG,EAAX,EAAWA,KACT,kCACKhB,GADL,IAEEF,KAAK,GAAD,mBAEGE,EAAMF,MAFT,CAGA,CACAe,GAAIA,EACJG,KAAMA,OAMZ,IAAK,SACL,IAAMQ,EAAQxB,EAAMF,KAAK2B,QAAO,SAACN,GAAD,OAAQA,EAAKN,KAAKU,EAAOV,MACvD,kCACKb,GADL,IAEEF,KAAM0B,IAIR,IAAK,SAEH,kCACKxB,GADL,IAEEF,KAAM,KAKd,QACC,OAAOE,IC7BG0B,EANMC,YACnB,CACE1B,aCAW2B,EAFFC,YAAYH,GCEzBI,IAASC,OACP,mCACA,cAAC,IAAD,CAAUH,MAASA,EAAnB,SACE,cAAC,EAAD,QAGFI,SAASC,eAAe,W","file":"static/js/main.9e7693cb.chunk.js","sourcesContent":["import React,{useState} from \"react\";\r\nimport \"./todo.css\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addTodo, deleteTodo, removeTodo} from \"../actions/index.js\";\r\n\r\nfunction Todo(){\r\n  const [inputData,setData] = useState('');\r\n  const list= useSelector((state)=>state.reducers.list);\r\n  const dispatch = useDispatch();\r\n  return(\r\n    <>\r\n      <div className=\"container\">\r\n      <div className=\"wrapper\">\r\n        <div className=\"inner\">\r\n          <h1>TO DO LIST</h1>\r\n          <input className=\"input\" type= \"text\" placeholder=\"add_items\" value= {inputData}  onChange={(event)=>setData(event.target.value)} />\r\n          <button><i className=\"fa fa-plus\" onClick={()=>dispatch(addTodo(inputData),setData(\"\"))} ></i></button>\r\n        </div>\r\n        <div className=\"show\">\r\n          {\r\n            list.map((elem)=>{\r\n              return(\r\n              <div className=\"eachitem\" key={elem.id}>\r\n                <h4>{elem.data}</h4>\r\n                <i class=\"fas fa-trash-alt\" onClick={()=>dispatch(deleteTodo(elem.id))}></i>\r\n                <hr />\r\n              </div>\r\n            )})\r\n          }\r\n        </div>\r\n      <div className=\"centre\">\r\n        <h1><button type=\"button\" onClick={()=>dispatch(removeTodo())}>REMOVE ALL</button></h1>\r\n      </div>\r\n      </div>\r\n      </div>\r\n    </>\r\n\r\n  )\r\n};\r\nexport default Todo;\r\n","export const addTodo = (inputData)=>{\r\n  return{\r\n    type: \"ADD\",\r\n    payload:{\r\n      id: Math.random(),\r\n      data: inputData\r\n    }\r\n  }\r\n};\r\n\r\nexport const deleteTodo = (id)=>{\r\n  return{\r\n    type: \"DELETE\",\r\n    id\r\n  }\r\n};\r\n\r\nexport const removeTodo = ()=>{\r\n  return{\r\n    type: \"REMOVE\",\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport Todo from \"./todo.js\";\r\n\r\nfunction App(){\r\n  return(\r\n    <>\r\n      <Todo />\r\n    </>\r\n\r\n  )\r\n};\r\nexport default App;\r\n","\r\nconst initialData ={\r\n  list: []\r\n}\r\nconst reducers = (state=initialData, action)=>{\r\n  switch (action.type) {\r\n    case \"ADD\":\r\n    const {id, data} = action.payload;\r\n      return{\r\n        ...state,\r\n        list:\r\n          [\r\n            ...state.list,\r\n            {\r\n            id: id,\r\n            data: data,\r\n          }\r\n          ]\r\n        }\r\n\r\n      break;\r\n      case \"DELETE\":\r\n      const newlist=state.list.filter((elem)=>elem.id!==action.id)\r\n        return{\r\n          ...state,\r\n          list: newlist\r\n          }\r\n\r\n        break;\r\n        case \"REMOVE\":\r\n\r\n          return{\r\n            ...state,\r\n            list: []\r\n          }\r\n\r\n\r\n          break;\r\n    default:\r\n     return state;\r\n\r\n  }\r\n}\r\n\r\nexport default reducers;\r\n","import reducers from \"./reducers.js\";\r\n\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst rootReducers = combineReducers(\r\n  {\r\n    reducers\r\n  }\r\n)\r\n\r\nexport default rootReducers;\r\n","import {createStore} from \"redux\";\r\n\r\nimport rootReducers from \"./reducer/index.js\";\r\n\r\nconst store= createStore(rootReducers);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./components/app.js\";\r\nimport store from \"./store\";\r\nimport {Provider} from \"react-redux\";\r\n\r\nReactDom.render(\r\n  <>\r\n  <Provider store = {store}>\r\n    <App/>\r\n  </Provider>\r\n  </>,\r\n  document.getElementById('root'));\r\n"],"sourceRoot":""}